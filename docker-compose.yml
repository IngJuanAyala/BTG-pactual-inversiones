version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: btg-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: btg_pactual
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - btg-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: btg-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - btg-network

  # Servicio de Autenticaci√≥n
  auth-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: btg-auth-service
    restart: unless-stopped
    ports:
      - "8002:8002"
      - "5678:5678"  # Puerto para debugging
    environment:
      - ENVIRONMENT=development
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/btg_pactual?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - AUTH_SERVICE_URL=http://auth-service:8002
      - FUNDS_SERVICE_URL=http://funds-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8001
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - redis
    networks:
      - btg-network
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "uvicorn", "auth-service.main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]

  # Servicio de Fondos
  funds-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: btg-funds-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/btg_pactual?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - AUTH_SERVICE_URL=http://auth-service:8002
      - FUNDS_SERVICE_URL=http://funds-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8001
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - redis
      - auth-service
    networks:
      - btg-network
    command: ["python", "-m", "uvicorn", "funds-service.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Servicio de Notificaciones
  notification-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: btg-notification-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/btg_pactual?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - AUTH_SERVICE_URL=http://auth-service:8002
      - FUNDS_SERVICE_URL=http://funds-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8001
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:-}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:-}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER:-}
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - redis
      - auth-service
    networks:
      - btg-network
    command: ["python", "-m", "uvicorn", "notification-service.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  # API Gateway (Nginx)
  nginx:
    image: nginx:alpine
    container_name: btg-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - auth-service
      - funds-service
      - notification-service
    networks:
      - btg-network

  # Frontend (opcional) - Comentado hasta que se implemente
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: btg-frontend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - nginx
  #   networks:
  #     - btg-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  btg-network:
    driver: bridge
